{"version":3,"sources":["logo.svg","components/search.js","components/shoppingCart.js","components/header.js","components/leftSection.js","components/item.js","components/rightSection.js","components/middleSect.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Search","props","searchInput","key","setState","brand","heading","console","log","fetch","then","data","json","resp","warn","searchData","price","toggleSearch","show","state","className","this","type","placeholder","onChange","event","target","value","icon","faSearch","onClick","Component","ShoppingCart","faShoppingCart","Header","faStar","LeftSection","ItemList","useState","setData","useEffect","loadData","a","response","receivedData","map","record","id","src","image","alt","name","actual","display","discount","RightSection","MiddleSect","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3d44554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, componentDidMount } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nclass Search extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {show:true}\n\t\tthis.state = {brand:'Loram Lipsum'}\n\t\tthis.state = {heading:'demp2'}\n\t\t//searchData:null\n}\n\n  componentDidMount(){\n    \n  }\n\n\tsearchInput=(key)=>{\n\t\tthis.setState({brand:'headingYash'})\n\t\tthis.setState({heading:'ss'})\n\t\tconsole.log(key)\n\t\tfetch(\"https://my-json-server.typicode.com/prograk/demo/items?q=\"+key).then((data)=>{\n\t\t\t\tdata.json().then((resp)=>{\n\t\t\t\tconsole.warn(\"resp\", resp)\n\t\t\t\tthis.setState({searchData:resp.price})\t\t\t \n\t\t\t\t})\n\t\t\t})\n\t}\n\n\ttoggleSearch=()=>{\n\t\tthis.setState({\n\t\t\tshow:!this.state.show\n\t\t\n\t\t})\n\t}\n\n\nrender() {\n\n\treturn (\n\n\t\t\n\t\t<div className=\"searchCont\">\n\t\t \n\t\t\t\n\t\t\t {\n\t\t\t \tthis.state.show?\n\t\t\t \t<div className=\"searchWrap\">\n\t\t\t \t<input type=\"text\"  placeholder=\"Search\" onChange={(event)=>this.searchInput(event.target.value)} />\n\t\t\t </div>\n\t\t\t :null\n\t\t}\n\t\t\t <FontAwesomeIcon className=\"searchIcon\" icon={faSearch} onClick={this.toggleSearch}  />\n\t\t</div>\n\t\t\n\t);\n}\n}\n \n\nexport default Search;","import React from 'react';\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons'\n\n\nconst ShoppingCart = () => {\n\treturn (\n\t\t<>\n\t\t<div className=\"searchCont\">\n\t\t\t <FontAwesomeIcon className=\"shoppingCart\" icon={faShoppingCart} />\n\t\t<i className=\"fas fa-star\" ></i>\n\t\t</div>\n\t\t</>\n\t);\n}\n\n \n\nexport default ShoppingCart;","import React from 'react';\nimport Search from './search';\nimport ShoppingCart from './shoppingCart';\n import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Header = () => {\n\treturn (\n\t\t<header className = \"header\" >\n\t\t<div className=\"contnar\">\n\t\t\t <FontAwesomeIcon className=\"star\" icon={faStar} />\n\t\t<div className=\"headerRig\">\n\t\t\t<Search />\n\t\t\t<ShoppingCart />\n\t\t</div>\n\t\t</div>\n\t\t</header>\n\t);\n}\n\n \n\nexport default Header;","import React from 'react';\n\nconst LeftSection = () => {\n\treturn (\n\t\t<div className=\"leftSect\">\n\t\t<div >\n\t\t\t LeftSection\n\t\t</div>\n\t\t</div>\n\t);\n}\n\n \n\nexport default LeftSection;","import React, {useEffect, useState} from 'react';\nimport Search from './search';\n\nconst ItemList = (props) => {\n\nconst [data, setData] = useState([]);\n\n\nuseEffect(()=>{\n\t\tloadData();\n\t}, []);\n\n\n\nconst loadData = async () => {\nawait fetch('https://my-json-server.typicode.com/prograk/demo/items')\n.then(response=>response.json())\n.then(receivedData => setData(receivedData))\n}\n\n\nfunction liFilter(key){\n\tconsole.log(key)\n\t\tfetch(\"https://my-json-server.typicode.com/prograk/demo/items?q=\"+key).then((data)=>{\n\t\t\t\tdata.json().then((data)=>{\n\t\t\t\tconsole.warn(\"data\", data)\n\t\t\t\t})\n\t\t\t})\n}\n\n\n\n \t\treturn(\n \t\t\t<>\n \t\t\t\n \t\t\t<div>\n\t\t</div>\n\n\t\t\t<ul className=\"itemContner\" >\n\n\t\t\t\t{data.map(record=>(\n\t\t\t\t\t<li key={record.id} >\n\t\t\t\t\t\t<img src={record.image} alt={record.name} id={record.id} />\n\t\t\t\t\t\t<h2>{record.name}</h2>\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<span className=\"priActual\">{record.price.actual}</span>\n\t\t\t\t\t\t\t<span className=\"priDisplay\">{record.price.display}</span>\n\t\t\t\t\t\t\t<span className=\"priRecord\">{record.discount} off</span>\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t<button>Add to Card</button>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t\t</>\n\t\t)\n\n}\nexport default ItemList;","import React from 'react';\nimport Item from './item';\n\nconst RightSection = () => {\n\treturn (\n\t\t<div className=\"rigSect\">\n\t\t<div className=\"filterCont\">\n\t\t\t RightSection\n\t\t</div>\n\n\t\t<Item />\n\t\t \n\t\t</div>\n\t);\n}\n\n \n\nexport default RightSection;","import React from 'react'; \nimport LeftSection from './leftSection';\nimport RightSection from './rightSection';\nconst MiddleSect = () => {\n\treturn (\n\t\t<>\n\t\t<div className=\"midSect\">\n\t\t\t <div className=\"contnar\">\n\t\t\t \t<LeftSection />\n\t\t\t \t<RightSection />\n\t\t\t </div>\n\t\t</div>\n\t\t</>\n\t);\n}\n\n \n\nexport default MiddleSect;","import React from 'react';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer >\n\t\t<div className=\"contnar\">\n\t\t\t @Copyright\n\t\t</div>\n\t\t</footer>\n\t);\n}\n\n \n\nexport default Footer;","import React from 'react';\nimport logo from './logo.svg';\nimport Header from './components/header';\nimport MiddleSect from './components/middleSect';\nimport Footer from './components/footer';\nimport './App.css';\n\nimport './assets/scss/main.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MiddleSect />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}